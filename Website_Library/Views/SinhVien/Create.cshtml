@model Website_Library.Models.SinhVien

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Index.cshtml";
}

<style>
    /* CSS */
    .input-field {
        width: 300px; /* Điều chỉnh chiều dài của input */
    }

    .input-label {
        width: 150px; /* Điều chỉnh chiều rộng của nhãn label */
        margin-left: 50px;
    }

    .btn {
        color: black;
    }
</style>

<h2 style="margin-left:40%; color:red; font-size:50px">SINH VIÊN</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.MaSinhVien, "Mã Sinh Viên", htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaSinhVien, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.MaSinhVien, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenSinhVien, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSinhVien, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.TenSinhVien, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaiKhoan, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.TaiKhoan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2 input-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control input-field" } })
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
